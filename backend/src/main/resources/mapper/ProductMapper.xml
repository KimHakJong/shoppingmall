<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.shopping.backend.mapper.ProductMapper">

    <!-- 모든 상품 조회 -->
    <select id="findAllProducts" resultType="com.shopping.backend.entity.Product">
        SELECT 
            id,
            name,
            description,
            price,
            stock,
            category_id as categoryId,
            image_url as imageUrl,
            is_popular as isPopular,
            is_new as isNew,
            created_at as createdAt,
            updated_at as updatedAt
        FROM products
        ORDER BY created_at DESC
    </select>

    <!-- 상품 ID로 조회 -->
    <select id="findById" parameterType="long" resultType="com.shopping.backend.entity.Product">
        SELECT 
            id,
            name,
            description,
            price,
            stock,
            category_id as categoryId,
            image_url as imageUrl,
            is_popular as isPopular,
            is_new as isNew,
            created_at as createdAt,
            updated_at as updatedAt
        FROM products
        WHERE id = #{id}
    </select>

    <!-- 카테고리별 상품 조회 -->
    <select id="findByCategoryId" parameterType="long" resultType="com.shopping.backend.entity.Product">
        SELECT 
            id,
            name,
            description,
            price,
            stock,
            category_id as categoryId,
            image_url as imageUrl,
            is_popular as isPopular,
            is_new as isNew,
            created_at as createdAt,
            updated_at as updatedAt
        FROM products
        WHERE category_id = #{categoryId}
        ORDER BY created_at DESC
    </select>

    <!-- 상품명으로 검색 -->
    <select id="findByNameContaining" parameterType="string" resultType="com.shopping.backend.entity.Product">
        SELECT 
            id,
            name,
            description,
            price,
            stock,
            category_id as categoryId,
            image_url as imageUrl,
            is_popular as isPopular,
            is_new as isNew,
            created_at as createdAt,
            updated_at as updatedAt
        FROM products
        WHERE name LIKE CONCAT('%', #{name}, '%')
        ORDER BY name ASC
    </select>

    <!-- 인기 상품 조회 -->
    <select id="findPopularProducts" resultType="com.shopping.backend.entity.Product">
        SELECT 
            id,
            name,
            description,
            price,
            stock,
            category_id as categoryId,
            image_url as imageUrl,
            is_popular as isPopular,
            is_new as isNew,
            created_at as createdAt,
            updated_at as updatedAt
        FROM products
        WHERE is_popular = true
        ORDER BY created_at DESC
        LIMIT 10
    </select>

    <!-- 신상품 조회 -->
    <select id="findNewProducts" resultType="com.shopping.backend.entity.Product">
        SELECT 
            id,
            name,
            description,
            price,
            stock,
            category_id as categoryId,
            image_url as imageUrl,
            is_popular as isPopular,
            is_new as isNew,
            created_at as createdAt,
            updated_at as updatedAt
        FROM products
        WHERE is_new = true
        ORDER BY created_at DESC
        LIMIT 10
    </select>

    <!-- 가격 범위로 상품 검색 -->
    <select id="findByPriceRange" resultType="com.shopping.backend.entity.Product">
        SELECT 
            id,
            name,
            description,
            price,
            stock,
            category_id as categoryId,
            image_url as imageUrl,
            is_popular as isPopular,
            is_new as isNew,
            created_at as createdAt,
            updated_at as updatedAt
        FROM products
        WHERE price BETWEEN #{minPrice} AND #{maxPrice}
        ORDER BY price ASC
    </select>

    <!-- 상품 통계 조회 -->
    <select id="getProductStats" resultType="com.shopping.backend.dto.ProductStatsDto">
        SELECT 
            COUNT(*) as totalProducts,
            AVG(price) as averagePrice,
            SUM(price) as totalValue,
            MIN(price) as minPrice,
            MAX(price) as maxPrice,
            SUM(stock) as totalStock,
            COUNT(CASE WHEN is_popular = true THEN 1 END) as popularProducts,
            COUNT(CASE WHEN is_new = true THEN 1 END) as newProducts
        FROM products
    </select>

</mapper> 